@model LetsDisc.Questions.Dto.QuestionWithAnswersDto
@using LetsDisc.Web.Startup
@using LetsDisc.Web.Views
@using LetsDisc.Questions

@{
    ViewData["Title"] = "Questions";

}

@section scripts
    {
    <environment names="Development">
        <script src="~/view-resources/Views/Questions/Details.js" asp-append-version="true"></script>
    </environment>
    <environment names="Staging,Production">
        <script src="~/view-resources/Views/Questions/Details.min.js" asp-append-version="true"></script>
    </environment>
}

<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card">
            <div class="header">
                <h2>
                    @Model.Title
                </h2>
                <a class="btn btn-primary btn-circle waves-effect waves-circle waves-float pull-right questions-id" asp-action="Index">
                    <i class="material-icons">list</i>
                </a>
                <a class="btn btn-primary btn-circle waves-effect waves-circle waves-float pull-right questions-id delete-question" data-question-id="@Model.Id" data-question-title="@Model.Title">
                    <i class="material-icons">delete</i>
                </a>
                <a class="btn btn-primary btn-circle waves-effect waves-circle waves-float pull-right questions-id" asp-route-id="@Model.Id" asp-action="Edit">
                    <i class="material-icons">edit</i>
                </a>
                <a class="btn btn-primary btn-circle waves-effect waves-circle waves-float pull-right questions-id" asp-action="Create">
                    <i class="material-icons">add</i>
                </a>
            </div>
            <div class="body table-responsive">
                <div class="vote-layout">
                    @{ 
                        var userVoted = Model.UsersVoted.FirstOrDefault(a => a.UserId == AbpSession.UserId.GetValueOrDefault());
                        var isUpvoted = false;
                        var isDownvoted = false;
                        if (userVoted != null)
                        {
                            isUpvoted = userVoted.IsUpvoted;
                            isDownvoted = userVoted.IsDownvoted;

                        }
                    }
                    <a data-question-id="@Model.Id" class="pull-right vote-up @(isUpvoted ? "vote-up-on" : "")">
                        <i class="material-icons">arrow_drop_up</i>
                    </a>
                    <div class="upvote-count">@Model.UpvoteCount</div>
                    <a data-question-id="@Model.Id" class="pull-right vote-down @(isDownvoted ? "vote-down-on" : "")">
                        <i class="material-icons">arrow_drop_down</i>
                    </a>
                </div>
                <div class="question-body">@Model.Body</div>
                <div class="user-info">
                    <div class="total-views">Viewed @Model.ViewCount times</div>
                    <div class="asked-time">asked @TimeAgo.GetTimeAgo(Model.CreationTime)</div>
                    <div class="asked-by">
                        @{
                            var username = "admin";
                            if (!(Model.CreatorUserName == "" || Model.CreatorUserName == null))
                            {
                                username = Model.CreatorUserName;

                            }
                        }
                        by @username
                    </div>
                </div>
            </div>
            <div class="body">
                <h4>
                    @L("YourAnswer")
                </h4>
                <div class="wmd-panel">
                    <div id="wmd-button-bar"></div>
                    <label for="answer_question_body" class="required"></label>
                    <textarea class="wmd-input" id="ask_question_body"></textarea>
                </div>
                <div id="wmd-preview" class="wmd-panel wmd-preview"></div>
            </div>
        </div>
    </div>
</div>
